var img = teaser.HasValue("img") ? Umbraco.Media(teaser.GetPropertyValue("img")).GetCropUrl("Single Teaser") : "/images/fallback-225x140.gif";

@if(Model.Content.HasValue("heroImage")) {
	
	var img = Umbraco.Media(Model.Content.GetPropertyValue("heroImage"));														  
			
	<img src="@img.Url" alt="" />
}


@*
	----- Document type in view -----
*@

@if (Model.Content.DocumentTypeAlias == "Newspage")
{
    var parent = CurrentPage.Up(1);
    <div class="news-details">
        <div class="date">@Umbraco.Field("pubDate", formatAsDate: true)</div>
        <a href="@parent.Url" title="@library.GetDictionaryItem("GoToNewsOverview")" class="pull-right">@library.GetDictionaryItem("GoToNewsOverview")</a>
    </div>
}


@*
	----- Current page -----
*@

<h3>@CurrentPage.infoTitle</h3>
@Html.Raw(CurrentPage.infoText)


@*
	----- Partials -----
*@

@Html.Partial("Header/ShopHeader")


@*
	----- Render -----
*@

@RenderBody()

@RenderSection("scripts", false)

@section scripts { }


@*
	----- Date -----
*@
        @node.createDate.ToString("MMMM d, yyyy")
        
 	@Convert.ToDateTime(item.GetPropertyValue("newsDate")).ToString("dd mm yy")

@*
	----- Language -----
*@

	@{
	  var language = Model.Content.GetPropertyValue("language", true).ToString();
	}
	
	@if (@language == "da") {
	
	} else {}
	
	<h1>@Html.Raw(Model.Content.GetPropertyValue<string>("pageTitle"))</h1>



@*
	----- If -----
*@

	@if(Model.Content.GetPropertyValue<bool>("showImportantNotice")) {
		<div class="panel">
			<div class="panelBackground light gradient">
				<div class="row">
					<div class="large-9 small-8 columns">
						@Html.Raw(Model.Content.GetPropertyValue<string>("importantNotice"))
					</div>
					<div class="large-3 small-4 columns importantIcon">
						<span aria-hidden="true" class="icon-info"></span>
					</div>
				</div>			
			</div>	
		</div>
	}



	@if(!string.IsNullOrWhiteSpace(Model.MetaDescription))
	{
	    <meta name="description" content="@Model.MetaDescription" />
	}
	 
	@if(!string.IsNullOrWhiteSpace(Model.MetaKeywords))
	{
	    <meta name="keywords" content="@Model.MetaKeywords" />
	}
	




@*
	----- Redirect -----
*@

	@{
	string url = Model.Content.GetPropertyValue<string>("redirectURL");
	Response.Redirect(url);
	}
	
	
	
	



