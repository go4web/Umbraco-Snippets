@inherits Umbraco.Web.Mvc.UmbracoViewPage<IPublishedContent>
	
@{
	
    Layout = null;
    var nodeIds = Model.GetPropertyValue<string>("contentPanels").Split(',');
    List<IPublishedContent> panels = new List<IPublishedContent>();
    
    foreach(var nodeId in nodeIds)
    {
        if(!String.IsNullOrEmpty(nodeId))
        {
            var publishedContent = Umbraco.NiceUrl(Convert.ToInt32(nodeId));
            if (!String.IsNullOrEmpty(publishedContent) && publishedContent!="#")
            {
                panels.Add(Umbraco.TypedContent(nodeId));
            }
        }
    }
    
}
@if(panels.Count() > 0)
{
	<div class="row">
        @foreach (var panel in panels)
        {
            if (panel != null)
            {
               	<div class="large-6 columns">
					<div class="panel shortcut">
						<div class="panelBackground gradient">
				   			<h4>@Html.Raw(panel.GetPropertyValue<string>("title"))</h4>
							<p>@Html.Raw(panel.GetPropertyValue<string>("bodyText"))</p>
							
							@{
								
								foreach (var item in Umbraco.TypedContent(panel.GetPropertyValue("link").ToString().Split(',')))
								{
									if (item != null)
									{
									<a href="@item.NiceUrl()" title="@item.Name" class="shortcutLink">@umbraco.library.GetDictionaryItem("Klik-her")</a>
									
									<a href="@item.NiceUrl()" title="@item.Name" rel="nofollow" class="shortcutLinkIcon"><span aria-hidden="true" class="icon-caret-right"></span></a>	
									}
								}	
	
							}

						
						</div>
					</div>	
				</div>	   
            }
        }
    </div>
}
